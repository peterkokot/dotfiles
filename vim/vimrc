" .vimrc as part of dotfiles
" Author: Peter Kokot <peterkokot@gmail.com>
" Source: https://github.com/peterkokot/dotfiles

set nocompatible

" required by vundle to work properly
filetype off

" vundle configuration
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

" vim's plugins used in this configuration
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-rails'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'tpope/vim-surround'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-markdown'
Plugin 'evidens/vim-twig'
Plugin 'elzr/vim-json'
Plugin 'mattn/emmet-vim'
Plugin 'scrooloose/syntastic'
Plugin 'Rykka/riv.vim'
Plugin 'Rykka/clickable.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-repeat'
Plugin 'tobyS/vmustache'
Plugin 'tobyS/pdv'
Plugin 'stephpy/vim-php-cs-fixer'
Plugin 'SirVer/ultisnips'
Plugin 'nanotech/jellybeans.vim'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'editorconfig/editorconfig-vim'

" Vundle finishing up
call vundle#end()

" required by vundle to work properly
filetype plugin indent on

" set syntax highlighting on
syntax on

" set colors settings
set t_Co=256
let g:solarized_termcolors=256

colorscheme jellybeans

" fast terminal
set ttyfast
" scroll 3 lines
set ttyscroll=3
" no screen redrawing by default
set lazyredraw
set cursorline cursorcolumn
hi CursorLine term=bold cterm=bold guibg=Grey40
set incsearch
set hlsearch
set number
set showbreak=↳
set mouse=a
set guioptions-=m
set guioptions-=T
set guioptions-=r

" Shortcut to rapidly toggle `set list`
nmap ,l :set list!
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬

" always show status bar
set laststatus=2

" sets status line, example [utf-8] 118,27  51%
if has("statusline")
    set statusline=%<%f\ %h%m%r%=%{\"[\".(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\").\"]\ \"}%k\ %-14.(%l,%c%V%)\ %P
endif

set encoding=utf-8
setglobal fileencoding=utf-8
set nobomb
set termencoding=utf-8
set fileencodings=utf-8

set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4

set fdm=syntax
set foldlevelstart=20
set nobackup
set noswapfile

set visualbell    " don't beep
set noerrorbells  " don't beep

set pastetoggle=<F2>

" disable folding in markdown files
let g:vim_markdown_folding_disabled=1

"""""""""""""""""""""""""""""""""""""""""""
" specific settings for different filetypes
"""""""""""""""""""""""""""""""""""""""""""

" set highlighting for *.md, *.markdown files
au BufRead,BufNewFile *.md,*.markdown,*.mdown set filetype=markdown

" set highlightning for *.html.twig files
au BufRead,BufNewFile *.html.twig set filetype=html.twig

" set highlightning for *.json files
au BufRead,BufNewFile *.json set filetype=json

"autocmd BufRead,BufNewFile   *.xlf,*.xliff,*.php,*.html,*.twig set shiftwidth=4 tabstop=4
"autocmd BufRead,BufNewFile *.rb setlocal shiftwidth=2 tabstop=2
"autocmd BufRead,BufNewFile *.java set noic cin noexpandtab
"au FileType *xlf,*.xliff,*.php,*.html,*.twig setlocal shiftwidth=4 tabstop=4

" set highlightning for *.json files
au BufRead,BufNewFile *.conf set syntax=dosini


""""""""""""""""""""""""""""""""""""""""
" custom commands
""""""""""""""""""""""""""""""""""""""""

command Q q
command Wq wq
command WQ wq


" Make the 81st column stand out
set colorcolumn=80

""""""""""""""""""""""""""""""""""""""""
" NERDTree
""""""""""""""""""""""""""""""""""""""""

autocmd VimEnter * NERDTree
let NERDTreeShowHidden=1
autocmd VimEnter * wincmd p

autocmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()

" Close all open buffers on entering a window if the only
" buffer that's left is the NERDTree buffer
function! s:CloseIfOnlyNerdTreeLeft()
    if exists("t:NERDTreeBufName")
        if bufwinnr(t:NERDTreeBufName) != -1
            if winnr("$") == 1
                q
            endif
        endif
    endif
endfunction

"""""""""""""""""""""""""""""""""""""""
" ctrlp.vim
"""""""""""""""""""""""""""""""""""""""
set runtimepath^=~/.vim/bundle/ctrlp.vim


""""""""""""""""""""""""""""""""""""""
" pdv
""""""""""""""""""""""""""""""""""""""

let g:pdv_template_dir = $HOME ."/.vim/bundle/pdv/templates_snip"
" PHP documenter script bound to Control-P
autocmd FileType php inoremap <C-p> <ESC>:call pdv#DocumentWithSnip()<CR>i
autocmd FileType php nnoremap <C-p> :call pdv#DocumentWithSnip()<CR>
autocmd FileType php vnoremap <C-p> :call pdv#DocumentWithSnip()<CR>


" sets the title of the window to current opened file
let &titlestring = hostname() . "[vim(" . expand("%:t") . ")]"
if &term == "screen"
    set t_ts=^[k
    set t_fs=^[\
endif
if &term == "screen" || &term == "xterm"
    set title
endif

" wrap lines when in diff mode
au VimEnter * if &diff | execute 'windo set wrap' | endif
